<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.MarissaMan.dao.CartDao">
  <resultMap id="BaseResultMap" type="com.MarissaMan.entity.Cart">
    <id column="cart_id" jdbcType="INTEGER" property="cartId" />
    <result column="goods_id" jdbcType="INTEGER" property="goodsId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="amount" jdbcType="INTEGER" property="amount" />
    <result column="price" jdbcType="DOUBLE" property="price" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <if test="fields == null">
      cart_id, goods_id, user_id, name, amount, price
    </if>
    <if test="fields != null">
      ${fields}
    </if>
  </sql>
  <select id="selectByExample" parameterType="com.MarissaMan.entity.CartQuery" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cart
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="startRow != null">
      limit #{startRow} , #{pageSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    cart_id,goods_id,user_id,name,amount,price
    from cart
    where cart_id = #{cartId,jdbcType=INTEGER}
  </select>
  <!--by myself-->
  <select id="selectByUserId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    cart_id,goods_id,user_id,name,amount,price
    from cart
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from cart
    where cart_id = #{cartId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.MarissaMan.entity.CartQuery">
    delete from cart
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.MarissaMan.entity.Cart">
    insert into cart (cart_id, goods_id, user_id, 
      name, amount, price)
    values (#{cartId,jdbcType=INTEGER}, #{goodsId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{name,jdbcType=VARCHAR}, #{amount,jdbcType=INTEGER}, #{price,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" parameterType="com.MarissaMan.entity.Cart">
    insert into cart
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="cartId != null">
        cart_id,
      </if>
      <if test="goodsId != null">
        goods_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="price != null">
        price,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="cartId != null">
        #{cartId,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null">
        #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        #{price,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.MarissaMan.entity.CartQuery" resultType="java.lang.Integer">
    select count(*) from cart
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update cart
    <set>
      <if test="record.cartId != null">
        cart_id = #{record.cartId,jdbcType=INTEGER},
      </if>
      <if test="record.goodsId != null">
        goods_id = #{record.goodsId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=INTEGER},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DOUBLE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update cart
    set cart_id = #{record.cartId,jdbcType=INTEGER},
      goods_id = #{record.goodsId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      amount = #{record.amount,jdbcType=INTEGER},
      price = #{record.price,jdbcType=DOUBLE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.MarissaMan.entity.Cart">
    update cart
    <set>
      <if test="goodsId != null">
        goods_id = #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DOUBLE},
      </if>
    </set>
    where cart_id = #{cartId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.MarissaMan.entity.Cart">
    update cart
    set goods_id = #{goodsId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      amount = #{amount,jdbcType=INTEGER},
      price = #{price,jdbcType=DOUBLE}
    where cart_id = #{cartId,jdbcType=INTEGER}
  </update>
</mapper>